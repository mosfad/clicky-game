{"version":3,"sources":["components/Header.js","components/Image.js","components/ImageList.js","components/Footer.js","components/App.js","index.js"],"names":["Header","props","className","href","colorStatus","gameStatus","userScore","topScore","Image","state","id","clicked","doubleClicked","image","handleClick","console","log","setState","onClickStatus","this","imageInfo","prevProps","prevState","alt","src","onClick","Component","ImageList","handleClickStatus","imageClicked","onDoubleClick","shakeAnimation","images","map","singleImage","key","Footer","App","score","handleOnDoubleClick","animateGameStatus","incrementScores","imagesArr","shuffleImages","setTimeout","restoreGameStatus","arrayOfImages","imageArr","i","length","randomIndex","Math","floor","random","item","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b59b9c4c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = props => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-dark fixed-top bg-primary\">\n        <a className=\"navbar-brand text-center\" href=\"#\">\n          Clicky Game\n        </a>\n        <h3 className={\"nav-item text-center text-\" + props.colorStatus}>\n          {props.gameStatus}\n        </h3>\n        <h3 className=\"nav-item text-light text-center\">\n          Scores: {props.userScore || 0} &ensp;|&ensp; Top Scores:{\" \"}\n          {props.topScore || 0}\n        </h3>\n      </nav>\n      <div className=\"jumbotron\">\n        <p className=\"text-center jumb-header text-light\">Clicky Game</p>\n        <p className=\"text-center jumb-text text-light font-weight-bold\">\n          Click on the image to earn points, but don't double click on any!\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\n//import \"./style.css\";\n\nclass Image extends Component {\n  state = {\n    id: 0,\n    clicked: false,\n    doubleClicked: false,\n    image: \"\"\n  };\n\n  componentDidMount() {\n    const { id, clicked, doubleClicked, image } = this.props.imageInfo;\n    this.setState({ id, clicked, doubleClicked, image });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // if (\n    //   this.state.doubleClicked &&\n    //   this.state.doubleClicked !== prevState.doubleClicked\n    // ) {\n    //   this.setState({ clicked: false, doubleClicked: false });\n    // }\n\n    if (!this.props.userScore && this.props.userScore !== prevProps.userScore) {\n      console.log(this.props.userScore);\n      console.log(typeof this.props.userScore);\n      console.log(prevProps.userScore);\n      console.log(typeof prevProps.userScore);\n      this.setState({ clicked: false, doubleClicked: false }, () => {});\n    }\n  }\n\n  handleClick = () => {\n    //make sure clicked and doubleClicked aren't booleans before casting them to booleans!!!\n    let clicked =\n      typeof this.state.clicked === \"boolean\"\n        ? this.state.clicked\n        : this.state.clicked === \"true\";\n    let doubleClicked =\n      typeof this.state.doubleClicked === \"boolean\"\n        ? this.state.doubleClicked\n        : this.state.doubleClicked === \"true\";\n    console.log(clicked);\n    console.log(doubleClicked);\n    if (!clicked && !doubleClicked) {\n      //may need a callback here to make sure App component gets the correct clicked value\n      console.log(\"Image was clicked once\");\n      this.setState({ clicked: true }, () => {\n        this.props.onClickStatus(this.state);\n      });\n    } else if (clicked && !doubleClicked) {\n      console.log(\"Image was clicked twice\");\n      this.setState({ doubleClicked: true }, () => {\n        this.props.onClickStatus(this.state);\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <img\n          className=\"single-img\"\n          alt=\"clicked-images\"\n          src={this.state.image}\n          onClick={this.handleClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Image;\n","import React, { Component } from \"react\";\nimport Image from \"./Image\";\n//import \"./style.css\";\n\nclass ImageList extends Component {\n  state = {};\n  handleClickStatus = imageClicked => {\n    //console.log(imageClicked.id);\n    this.setState(\n      {\n        id: imageClicked.id,\n        doubleClicked: imageClicked.doubleClicked\n      },\n      () => this.props.onDoubleClick(this.state)\n    );\n  };\n\n  componentDidUpdate(prevProps, prevState) {}\n  render() {\n    let shakeAnimation = this.props.colorStatus === \"danger\" ? \"add-shake\" : \"\";\n    return (\n      <div className=\"container\">\n        <div className={`row ${shakeAnimation}`}>\n          {this.props.images.map(singleImage => {\n            return (\n              <Image\n                userScore={this.props.userScore}\n                className=\"col-md-3\"\n                key={singleImage.id}\n                imageInfo={singleImage}\n                onClickStatus={this.handleClickStatus}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImageList;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-dark bg-primary\">\n        <div className=\"nav-item text-light footer-copyright mx-auto\">\n          Â© 2020 Copyright: Dupe Fadina\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport ImageList from \"./ImageList\";\nimport Footer from \"./Footer\";\nimport images from \"../images.json\";\n\nclass App extends Component {\n  state = {\n    gameStatus: \"Click an image to begin!\",\n    colorStatus: \"light\",\n    score: 0,\n    topScore: 0,\n    images\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      prevState.score !== this.state.score &&\n      this.state.score > this.state.topScore\n    ) {\n      this.setState({ topScore: this.state.score });\n    }\n  }\n\n  handleOnDoubleClick = imageClicked => {\n    //const { id, doubleClicked } = imageClicked;\n    // console.log(id);\n    // console.log(doubleClicked);\n    // console.log(imageClicked);\n    // console.log(imageClicked.id);\n    console.log(imageClicked.doubleClicked);\n    console.log(typeof imageClicked.doubleClicked);\n    //Get the index of the item in `images` array to update ***\n    this.setState({ imageClicked }, () => {\n      if (!this.state.imageClicked.doubleClicked) {\n        this.incrementScores();\n        const imagesArr = this.shuffleImages(this.state.images);\n        this.setState(\n          {\n            gameStatus: \"You guessed correctly!\",\n            images: [...imagesArr]\n          },\n          () => this.animateGameStatus()\n        );\n      } else {\n        //reset the game, but keep top score.\n        //Get App to re-render by passing images Array(with clicked & doubleClicked properties set to false) to ImageList!!!\n        this.setState(\n          { gameStatus: \"You guessed incorrectly!\", score: 0 },\n          () => this.animateGameStatus()\n        );\n      }\n    });\n  };\n\n  incrementScores = () => {\n    this.setState(state => {\n      // Important: read `state` instead of `this.state` when updating.\n      //figure out how to add top score in the object below............................................\n      return { score: state.score + 1 };\n    });\n  };\n\n  animateGameStatus = () => {\n    if (this.state.gameStatus === \"You guessed correctly!\") {\n      //todo:\n      //1. change text color to green(delay may not be required.)\n      //2. change text color to white after 1s\n      this.setState({ colorStatus: \"success\" }, () => {\n        setTimeout(this.restoreGameStatus, 300);\n      });\n    } else if (this.state.gameStatus === \"You guessed incorrectly!\") {\n      //todo:\n      //1. change text color to red(delay maynot be required.)\n      //2. change text color to white after 1s\n      this.setState({ colorStatus: \"danger\" }, () => {\n        setTimeout(this.restoreGameStatus, 300);\n      });\n    }\n  };\n\n  restoreGameStatus = () => {\n    this.setState({ colorStatus: \"white\" });\n  };\n\n  shuffleImages = arrayOfImages => {\n    const imageArr = [...arrayOfImages];\n    for (let i = imageArr.length - 1; i >= 0; i--) {\n      let randomIndex = Math.floor(Math.random() * i);\n      let item = imageArr[i];\n      imageArr[i] = imageArr[randomIndex];\n      imageArr[randomIndex] = item;\n    }\n    console.log(imageArr);\n    return imageArr;\n  };\n\n  render() {\n    return (\n      <div>\n        <Header\n          userScore={this.state.score}\n          topScore={this.state.topScore}\n          gameStatus={this.state.gameStatus}\n          colorStatus={this.state.colorStatus}\n        />\n        <ImageList\n          userScore={this.state.score}\n          onDoubleClick={this.handleOnDoubleClick}\n          images={this.state.images}\n          colorStatus={this.state.colorStatus}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//import \"./style.scss\";****use this for Sass files\nimport App from \"./components/App\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n// Put any other imports below so that CSS from your\n// components takes precedence over default styles.\nimport \"./components/style.css\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"],"sourceRoot":""}